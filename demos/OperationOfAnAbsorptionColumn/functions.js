let flashDrum = [[25.3231031543052, 52.80136402387042],[25.861892583120206, 49.02983802216539],[27.20886615515772, 45.52770673486786],[28.82523444160273, 42.56436487638534],[30.710997442455245, 40.13981244671782],[32.86615515771526, 37.7152600170503],[35.290707587382784, 35.56010230179028],[37.9846547314578, 33.135549872122766],[40.67860187553283, 31.24978687127025],[43.372549019607845, 29.63341858482523],[46.33589087809037, 28.017050298380223],[49.29923273657289, 26.670076726342714],[53.34015345268543, 25.0537084398977],[56.84228473998295, 23.976129582267692],[60.34441602728048, 22.62915601023018],[64.65473145780051, 21.55157715260017],[68.15686274509804, 20.743393009377666],[71.92838874680308, 19.665814151747657],[76.2387041773231, 19.127024722932653],[80.81841432225065, 18.85763000852515],[84.85933503836317, 18.58823529411765],[88.90025575447571, 18.049445865302644],[94.28815004262574, 17.78005115089514],[98.86786018755329, 17.78005115089514],[103.44757033248082, 17.78005115089514],[107.48849104859336, 18.04944586530264],[111.26001705029839, 18.58823529411765],[115.03154305200341, 19.12702472293265],[118.80306905370844, 19.66581415174765],[122.57459505541348, 20.20460358056266],[126.34612105711851, 20.47399829497016],[129.84825234441604, 21.55157715260017],[133.08098891730606, 22.62915601023018],[136.58312020460357, 23.70673486786018],[139.81585677749362, 24.51491901108269],[143.58738277919863, 26.13128729752771],[147.62830349531117, 28.01705029838022],[151.9386189258312, 29.902813299232736],[155.44075021312875, 32.32736572890025],[158.40409207161127, 34.75191815856777],[162.1756180733163, 37.4458653026428],[164.60017050298381, 40.67860187553283],[166.75532821824382, 43.91133844842285],[167.83290707587383, 46.87468030690537],[168.64109121909635, 50.3768115942029],[168.91048593350385, 56.84228473998295],[168.91048593350385, 269.1253196930946],[168.10230179028133, 272.8968456947996],[166.48593350383632, 276.9377664109122],[164.33077578857632, 279.9011082693947],[161.6368286445013, 282.86445012787726],[159.21227621483376, 285.5583972719523],[155.97953964194375, 287.9829497016198],[152.4774083546462, 290.1381074168798],[148.97527706734869, 292.5626598465473],[145.20375106564364, 294.4484228473998],[140.8934356351236, 296.06479113384484],[136.8525149190111, 297.6811594202899],[132.27280477408357, 299.0281329923273],[128.23188405797103, 300.1057118499574],[123.92156862745098, 301.1832907075874],[118.26427962489345, 301.9914748508099],[113.6845694799659, 302.7996589940324],[108.56606990622336, 303.3384484228474],[103.98635976129583, 303.8772378516624],[98.86786018755329, 303.8772378516624],[93.47996589940324, 303.6078431372549],[88.3614663256607, 303.6078431372549],[83.24296675191816, 303.3384484228474],[79.74083546462063, 303.0690537084399],[75.4305200341006, 302.26086956521743],[71.12020460358056, 301.9914748508099],[67.34867860187553, 300.9138959931799],[63.307757885763, 299.2975277067349],[58.99744245524297, 298.21994884910487],[55.22591645353794, 296.8729752770674],[51.993179880647915, 295.2566069906223],[47.952259164535384, 293.9096334185848],[44.450127877237854, 291.4850809889173],[40.947996589940324, 289.5993179880648],[37.7152600170503, 287.17476555839727],[33.94373401534527, 284.75021312872974],[31.788576300085253, 282.3256606990622],[30.17220801364024, 280.70929241261723],[28.82523444160273, 278.5541346973572],[27.47826086956522, 275.5907928388747],[26.13128729752771, 272.62745098039215],[25.592497868712705, 268.8559249786871],[25.592497868712705, 264.2762148337596],[25.592497868712705, 56.57289002557545],[25.3231031543052, 52.80136402387042],[25.861892583120206, 49.02983802216539],[27.20886615515772, 45.52770673486786],[28.82523444160273, 42.56436487638534],[30.710997442455245, 40.13981244671782],[32.86615515771526, 37.7152600170503],[35.290707587382784, 35.56010230179028],[37.9846547314578, 33.135549872122766],[40.67860187553283, 31.24978687127025],[43.372549019607845, 29.63341858482523],[46.33589087809037, 28.017050298380223],[49.29923273657289, 26.670076726342714],[53.34015345268543, 25.0537084398977],[56.84228473998295, 23.976129582267692],[60.34441602728048, 22.62915601023018],[64.65473145780051, 21.55157715260017],[68.15686274509804, 20.743393009377666],[71.92838874680308, 19.665814151747657],[76.2387041773231, 19.127024722932653],[80.81841432225065, 18.85763000852515],[84.85933503836317, 18.58823529411765],[88.90025575447571, 18.049445865302644],[94.28815004262574, 17.78005115089514],[98.86786018755329, 17.78005115089514],[103.44757033248082, 17.78005115089514],[107.48849104859336, 18.04944586530264],[111.26001705029839, 18.58823529411765],[115.03154305200341, 19.12702472293265],[118.80306905370844, 19.66581415174765],[122.57459505541348, 20.20460358056266],[126.34612105711851, 20.47399829497016],[129.84825234441604, 21.55157715260017],[133.08098891730606, 22.62915601023018],[136.58312020460357, 23.70673486786018],[139.81585677749362, 24.51491901108269],[143.58738277919863, 26.13128729752771],[147.62830349531117, 28.01705029838022],[151.9386189258312, 29.902813299232736],[155.44075021312875, 32.32736572890025],[158.40409207161127, 34.75191815856777],[162.1756180733163, 37.4458653026428],[164.60017050298381, 40.67860187553283],[166.75532821824382, 43.91133844842285],[167.83290707587383, 46.87468030690537],[168.64109121909635, 50.3768115942029],[168.91048593350385, 56.84228473998295],[168.91048593350385, 269.1253196930946],[168.10230179028133, 272.8968456947996],[166.48593350383632, 276.9377664109122],[164.33077578857632, 279.9011082693947],[161.6368286445013, 282.86445012787726],[159.21227621483376, 285.5583972719523],[155.97953964194375, 287.9829497016198],[152.4774083546462, 290.1381074168798],[148.97527706734869, 292.5626598465473],[145.20375106564364, 294.4484228473998],[140.8934356351236, 296.06479113384484],[136.8525149190111, 297.6811594202899],[132.27280477408357, 299.0281329923273],[128.23188405797103, 300.1057118499574],[123.92156862745098, 301.1832907075874],[118.26427962489345, 301.9914748508099],[113.6845694799659, 302.7996589940324],[108.56606990622336, 303.3384484228474],[103.98635976129583, 303.8772378516624],[98.86786018755329, 303.8772378516624],[93.47996589940324, 303.6078431372549],[88.3614663256607, 303.6078431372549],[83.24296675191816, 303.3384484228474],[79.74083546462063, 303.0690537084399],[75.4305200341006, 302.26086956521743],[71.12020460358056, 301.9914748508099],[67.34867860187553, 300.9138959931799],[63.307757885763, 299.2975277067349],[58.99744245524297, 298.21994884910487],[55.22591645353794, 296.8729752770674],[51.993179880647915, 295.2566069906223],[47.952259164535384, 293.9096334185848],[44.450127877237854, 291.4850809889173],[40.947996589940324, 289.5993179880648],[37.7152600170503, 287.17476555839727],[33.94373401534527, 284.75021312872974],[31.788576300085253, 282.3256606990622],[30.17220801364024, 280.70929241261723],[28.82523444160273, 278.5541346973572],[27.47826086956522, 275.5907928388747],[26.13128729752771, 272.62745098039215],[25.592497868712705, 268.8559249786871],[25.592497868712705, 264.2762148337596],[25.592497868712705, 56.57289002557545]];

// Overall graph shape and graphic on the right
function frame(){
    
    if(!g.show5){
        push();
        scale(.8); translate(160,40);
        push(); // Flash drum
        beginShape(); strokeWeight(2); fill(250);
        for(let i = 0; i < flashDrum.length; i++){
            vertex(430+1.1*flashDrum[i][0],100+.8*flashDrum[i][1]);
        }
        endShape();
        pop();
        arrowDraw();
        figureLabels();
    }
    
    function arrowDraw(){
        push();
        strokeWeight(2.5); stroke(g.blue);
        line(width-20,45,width-120,45);
        line(width-120,45,width-120,110)
        arrow([width-120,45],[width-120,120],g.blue,21,5.5);
        line(width-120,340,width-120,400);
        line(width-120,400,width-35,400);
        arrow([width-120,400],[width-25,400],g.blue,21,5.5);
        stroke(g.green);
        line(395,45,490,45);
        line(490,45,490,120);
        arrow([490,45],[390,45],g.green,21,5.5);
        line(390,400,490,400);
        line(490,400,490,342);
        arrow([490,400],[490,335],g.green,21,5.5);
        pop();
    }

    function figureLabels(){
        // Upper right
        push();
        noStroke(); textSize(18); fill(g.blue);
        text('liquid solvent feed',width-160,18);
        if(g.L < 100){
            text('= '+g.L+' Mmol/h',width-115,40);
            textStyle(ITALIC);
            text('L',width-129,40);
        } else {
            text('= '+g.L+' Mmol/h',width-125,40);
            textStyle(ITALIC);
            text('L',width-139,40);
        }
        pop();
        push();
        noStroke(); fill(250);
        rect(width-140,54,120,23);
        textSize(18); fill(g.blue); textStyle(ITALIC);
        text('x',width-135,70);
        textSize(15); textStyle(NORMAL);
        text('0',width-125,75);
        textSize(18);
        text('= '+g.x0.toFixed(2)+' ppm',width-115,70);
        pop();
        
        // Upper left
        push();
        noStroke(); fill(250);
        rect(420,54,120,23);
        textSize(18); fill(g.green); textStyle(ITALIC);
        text('y',425,70);
        textSize(15); textStyle(NORMAL);
        text('1',435,75);
        textSize(18);
        text('= '+g.y1+' ppm',445,70);
        pop();

        // Lower left
        push();
        textStyle(ITALIC); textSize(18); noStroke(); fill(g.green);
        text('V',400,height+20);
        textStyle(NORMAL);
        text(' = 1 Mmol/h',413,height+20);
        text('vapor feed',400,height);
        pop();

        // In the column L/V
        push();
        textStyle(ITALIC); textSize(18); noStroke();
        text('L/V',500,280); 
        textStyle(NORMAL);
        text('= '+g.L,532,280);
        pop();
    }
    pop();

    // Graph shape
    push(); fill(250);
    rect(80,40,320,320);
    textSize(18); noStroke(); fill(0);
    text('solute/(solute-free liquid)     (ppm)',g.lx+30,height-10);
    textStyle(ITALIC); 
    text('x',g.lx+235,height-10);
    textStyle(NORMAL);
    translate(25,330); rotate(radians(-90));
    text('solute/(solute-free vapor)     (ppm)',0,0);
    textStyle(ITALIC);
    text('y',207,0);
    pop();
}


function show5Display(){
    let xLabels = ['0.0','0.1','0.2','0.3','0.4','0.5','0.6'];
    let yLabels = ['0','10','20','30','40','50','60'];
    let x = [0.05,0.12,0.20,0.29,0.41,0.54];
    let y = [10,17,25,34,49,59];
    
    // X-ticks

    // Y-ticks


    figure();
    function figure(){
        push();
        scale(.8); translate(160,40);

        push();
        for(let i = 1; i < 6; i++){
            if(i == g.stage){
                strokeWeight(4); fill(255,255,0);
                rect(480,50+80*(i-1),110,40)
            } else {
                strokeWeight(1.5); fill(250);
                rect(480,50+80*(i-1),110,40)
            }
        }
        pop();
        push();
        strokeWeight(2); 
        for(let i = 0; i < 5; i++){
            stroke(g.blue);
            line(565,10+80*i,565,45+80*i);
            arrow([565,10+80*i],[565,50+80*i],g.blue,20,6);
            stroke(g.green);
            line(505,530-80*(i+1),505,495-80*(i+1));
            arrow([505,530-80*(i+1)],[505,490-80*(i+1)],g.green,20,6);
        }
        pop();
        pop();
    }

}

// For creating arrows
function arrow(base,tip,color,arrowLength,arrowWidth){ 
    // base = [x,y] tip = [x,y]
    // let arrowLength = 20; // Length of arrow
    // let arrowWidth = 5; // width of arrow (1/2)
    let dx, dy, mag;
    let u_hat, u_perp;
    let point = new Array(2); // Point along unit vector that is base of triangle
    let vert = new Array(6); // Holds vertices of arrow
    // Need to define a unit vector
    dx = tip[0] - base[0];
    dy = tip[1] - base[1];
    mag = (dx**2 + dy**2)**(1/2);
    u_hat = [dx/mag,dy/mag];
    vert[0] = tip[0] - 2*u_hat[0]; // Shifts the arrow back some to keep the tip from going out too far
    vert[1] = tip[1] - 2*u_hat[1];
    // Perpendicular unit vector
    u_perp = [-u_hat[1],u_hat[0]];
    // Base of arrow
    point[0] = vert[0]+ -arrowLength*u_hat[0];
    point[1] = vert[1]+ -arrowLength*u_hat[1];
    
    vert[2] = point[0] + u_perp[0]*arrowWidth;
    vert[3] = point[1] + u_perp[1]*arrowWidth;
    vert[4] = point[0] + -u_perp[0]*arrowWidth;
    vert[5] = point[1] + -u_perp[1]*arrowWidth;
    push();
    stroke(color); fill(color); strokeWeight(1);
    triangle(vert[0],vert[1],vert[2],vert[3],vert[4],vert[5]);
    pop();
  
}